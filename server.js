const express = require('express')
const request = require('request');
const requestPromise = require('util').promisify(request);

require('dotenv').config()
const { PORT, POW_GAMING__GAME_LIST, POW_GAMING__OPERATOR_CODE, POW_GAMING__CURRENCY_CODE, POW_GAMING__LANG_CODE, POW_GAMING__OPERATOR_SEED, POW_GAMING__POW_SEED, POW_GAMING__PLATFORM_API } = process.env

const app = express()

const LauncherTokenGenerator = require('./lancher-token-generator.js')

app.use(function(req, res, next) {
  res.header("Access-Control-Allow-Origin", "*");
  res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
  next();
});

app.get('/game/:gameId', async (req, res) => {
    const username = req.query.username
    const userId = username ?? 'randomUser' // generated by the operator
    const gameId = req.params.gameId
    // launcher instance
    const launcher = new LauncherTokenGenerator(
      // authorization settings
      POW_GAMING__PLATFORM_API, 
      POW_GAMING__OPERATOR_CODE, 
      POW_GAMING__POW_SEED , 
      POW_GAMING__OPERATOR_SEED,
      // configurable settings
      POW_GAMING__CURRENCY_CODE, 
      POW_GAMING__LANG_CODE, 
      // game_id from the gameList
      gameId,
      // unique user identifier from the operators's database 
      userId,
      // user session token (or serialized secret string) to connect to the operator wallet api
      'API_USER_SESSION_TOKEN'
    )

    async function callService() {
      const { body, statusCode } = await requestPromise(launcher.getLaunchUrl())
      return statusCode != 200 ? 'error' : body
    }
    
    for (let tries = 0; tries < 3; tries++) {
      const response = await callService()
      if (response != 'error') {
        return res.redirect(response)
      }
    }
    return res.end('Service unavailable');
})

// storing game list
app.get('/game-list.js', async (req, res) => {
  const { body } = await requestPromise(POW_GAMING__GAME_LIST)  
  return res.end(`const gamesList = ${JSON.stringify(JSON.parse(body).games)}`);
})

app.use(express.static('site'));

app.listen(PORT, () => {
  console.log(`Example app listening on port ${PORT}`)
})